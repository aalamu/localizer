# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Clean
      run: mvn clean

    - name: Install
      run: mvn install
    
    - name: Verify
      run: mvn verify
    
    - name: Test
      run: mvn test
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Configure settings.xml
      run: |
        cd ~
        ls
        cd .m2
        rm settings.xml || true # Remove files, ignore errors if they don't exist
        touch ./settings.xml
        echo "${{ secrets.SETTINGS_XML }}" | base64 --decode > ./settings.xml
      shell: bash

    - name: Import GPG Private Key
      run: |
        mkdir -p ~/.gnupg
        echo "${{ secrets.GPG_PRIVATE_KEY }}" > private-key.asc
        gpg --batch --import private-key.asc
        rm private-key.asc
        gpg --list-secret-keys --keyid-format LONG  # This will list the imported keys
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

    - name: Set GPG Default Key
      run: |
        gpg --batch --yes --default-key "${{ secrets.GPG_PUB_KEY }}" --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" --quick-set-passphrase --import
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_PUB_KEY: ${{ secrets.GPG_PUB_KEY }}


    - name: Deploy
      run: mvn deploy -Pgpg
