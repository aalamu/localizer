# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'graalvm'
          java-version: '24'
          cache: maven
          server-id: central
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }} # env variable for username in deploy
          server-password: ${{ secrets.MAVEN_CENTRAL_TOKEN }} # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase

      - name: Configure settings.xml
        run: |
          mkdir -p ~/.m2 && cd ~/.m2
          rm settings.xml || true # Remove files, ignore errors if they don't exist
          touch ./settings.xml
          echo "${{ secrets.SETTINGS_XML }}" | base64 --decode > ./settings.xml
        shell: bash

      - name: Publish artifact
        run: mvn clean deploy -P deployment
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
